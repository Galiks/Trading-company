using System;

namespace Trading_company
{
    public partial class ShowCustomers : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            
        }

        protected void Customers_SelectedIndexChanged(object sender, EventArgs e)
        {
            AddOrder.Visible = true;
            UpdateOrder.Visible = true;
            DeleteOrder.Visible = true;
        }

        protected void AddOrder_Click(object sender, EventArgs e)
        {
            AddNewOrderPanel.Visible = true;
        }

        protected void NewOrderCancel_Click(object sender, EventArgs e)
        {
            NewTitle.Text = "";
            NewPrice.Text = "";
            NewCount.Text = "";
            AddNewOrderPanel.Visible = false;
        }

        protected void NewOrderAdd_Click(object sender, EventArgs e)
        {
            ErrorLabelOrder.Text = "";
            var title = NewTitle.Text;
            var priceText = NewPrice.Text;
            var countText = NewCount.Text;
            if (!string.IsNullOrWhiteSpace(title))
            {
                if (int.TryParse(priceText, out int price) && int.TryParse(countText, out int count))
                {
                    OrdersById.InsertParameters["Title"].DefaultValue = title;
                    OrdersById.InsertParameters["Price"].DefaultValue = price.ToString();
                    OrdersById.InsertParameters["Count"].DefaultValue = count.ToString();
                    OrdersById.Insert();
                    Orders.DataBind();
                    NewTitle.Text = "";
                    NewPrice.Text = "";
                    NewCount.Text = "";
                }
                else
                {
                    ErrorLabelOrder.Text = "Цена или количество не являются числом!";
                }
            }
            else
            {
                ErrorLabelOrder.Text = "Название не может быть пустым!";
            }
        }

        protected void UpdateOrder_Click(object sender, EventArgs e)
        {
            if (UpdateOrder.Text == "Редактировать заказ")
            {
                Orders.AutoGenerateEditButton = true;
                UpdateOrder.Text = "Закончить редактировать";
            }
            else if (UpdateOrder.Text == "Закончить редактировать")
            {
                Orders.AutoGenerateEditButton = false;
                UpdateOrder.Text = "Редактировать заказ";
            }
        }

        protected void DeleteOrder_Click(object sender, EventArgs e)
        {
            if (DeleteOrder.Text == "Удаление заказа")
            {
                Orders.AutoGenerateDeleteButton = true;
                DeleteOrder.Text = "Закончить удаление";
            }
            else if (DeleteOrder.Text == "Закончить удаление")
            {
                Orders.AutoGenerateDeleteButton = false;
                DeleteOrder.Text = "Удаление заказа";
            }
        }

        protected void UpdateCustomer_Click(object sender, EventArgs e)
        {
            if (UpdateCustomer.Text == "Редактировать клиента")
            {
                Customers.AutoGenerateEditButton = true;
                UpdateCustomer.Text = "Закончить редактирование";
            }
            else if (UpdateCustomer.Text == "Закончить редактирование")
            {
                Customers.AutoGenerateEditButton = false;
                UpdateCustomer.Text = "Редактировать клиента";
            }
        }

        protected void DeleteCustomer_Click(object sender, EventArgs e)
        {
            if (DeleteCustomer.Text == "Удаление клиента")
            {
                Customers.AutoGenerateDeleteButton = true;
                DeleteCustomer.Text = "Закончить удаление";
            }
            else if (DeleteCustomer.Text == "Закончить удаление")
            {
                Customers.AutoGenerateDeleteButton = false;
                DeleteCustomer.Text = "Удаление клиента";
            }
        }

        protected void NewCustomerAdd_Click(object sender, EventArgs e)
        {

        }

        protected void AddCustomer_Click(object sender, EventArgs e)
        {
            AddNewCustomerPanel.Visible = true;
        }

        protected void NewCustomerAdd_Click1(object sender, EventArgs e)
        {
            ErrorLabelCustomer.Text = "";
            var firstName = NewFirstname.Text;
            var lastname = NewLastname.Text;
            var birthdayText = NewBirthday.Text;
            if (!string.IsNullOrWhiteSpace(firstName) && !string.IsNullOrWhiteSpace(lastname))
            {
                if (DateTime.TryParse(birthdayText, out DateTime birthday))
                {
                    SqlDataSourceCustomer.InsertParameters["Firstname"].DefaultValue = firstName;
                    SqlDataSourceCustomer.InsertParameters["Lastname"].DefaultValue = lastname;
                    SqlDataSourceCustomer.InsertParameters["Birthday"].DefaultValue = birthday.ToString();
                    SqlDataSourceCustomer.Insert();
                    Customers.DataBind();
                    NewFirstname.Text = "";
                    NewLastname.Text = "";
                    NewBirthday.Text = "";
                }
                else
                {
                    ErrorLabelOrder.Text = "Дата рождения не является датой!";
                }
            }
            else
            {
                ErrorLabelOrder.Text = "Имя и фамилия не могут быть пустыми!";
            }
        }

        protected void AddCustomerCancel_Click(object sender, EventArgs e)
        {
            NewFirstname.Text = "";
            NewLastname.Text = "";
            NewBirthday.Text = "";
            AddNewCustomerPanel.Visible = false;
        }
    }
}